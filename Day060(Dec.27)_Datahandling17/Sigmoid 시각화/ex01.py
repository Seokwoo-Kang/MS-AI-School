import numpy as np
import matplotlib.pyplot as plt

# [-10 ~ 10] 구간에서 100개의 t값을 시그모이드 함수에 대입합니다.
t = np.linspace(-10, 10, 100)
# print(t)
"""
라인스페이스 - 더미파일 생성할때 유용
[-10.          -9.7979798   -9.5959596   -9.39393939  -9.19191919
  -8.98989899  -8.78787879  -8.58585859  -8.38383838  -8.18181818
  -7.97979798  -7.77777778  -7.57575758  -7.37373737  -7.17171717
  -6.96969697  -6.76767677  -6.56565657  -6.36363636  -6.16161616
  -5.95959596  -5.75757576  -5.55555556  -5.35353535  -5.15151515
  -4.94949495  -4.74747475  -4.54545455  -4.34343434  -4.14141414
  -3.93939394  -3.73737374  -3.53535354  -3.33333333  -3.13131313
  -2.92929293  -2.72727273  -2.52525253  -2.32323232  -2.12121212
  -1.91919192  -1.71717172  -1.51515152  -1.31313131  -1.11111111
  -0.90909091  -0.70707071  -0.50505051  -0.3030303   -0.1010101
   0.1010101    0.3030303    0.50505051   0.70707071   0.90909091
   1.11111111   1.31313131   1.51515152   1.71717172   1.91919192
   2.12121212   2.32323232   2.52525253   2.72727273   2.92929293
   3.13131313   3.33333333   3.53535354   3.73737374   3.93939394
   4.14141414   4.34343434   4.54545455   4.74747475   4.94949495
   5.15151515   5.35353535   5.55555556   5.75757576   5.95959596
   6.16161616   6.36363636   6.56565657   6.76767677   6.96969697
   7.17171717   7.37373737   7.57575758   7.77777778   7.97979798
   8.18181818   8.38383838   8.58585859   8.78787879   8.98989899
   9.19191919   9.39393939   9.5959596    9.7979798   10.        ]
"""

# 시그모이드 공식
# np.exp -> 함수 밑(base)이 자연상수 e인 지수함수로 변환
sig = 1/(1.0 + np.exp(-t))

# t 와 시그모이드 결과 그래프
plt.figure(figsize=(9,3))
plt.plot([-10,10], [0,0],"k-")
plt.plot([-10,10], [0.5,0.5], "k:") # y축 기준 0.5 실선 하나 생성
plt.plot([-10,10], [1,1], "k:")     # y축 기준 1 실선 하나 생성
plt.plot([0,0], [-1.1, 1.1], "k-")  # 센터 기준 0.0 선하나 생성
plt.plot(t, sig, "r-", linewidth=2, label=r"$\sigma(t) = \frac{1}{1+e^{-t}}$")
plt.xlabel("t")
plt.legend(loc="upper left", fontsize=20)
plt.axis([-10, 10, -0.1, 1.1])        # 그래프 간격
plt.show()





