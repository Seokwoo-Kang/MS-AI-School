정규화는 요즘 안하는 추세
하고 안하고차이가크게없음

로스함수
모델을 새로 디지인할떄 개선이 요구된다(성능향상을 위해)
서비스하는 입장에서는 굳이
만약 새로운 아키텍쳐를 구축할때는 논문을 통해 개선

모델을 선정할때 3년안에 업데이트가 된 모델을 고르는게 좋다
오픈소스의 경우 별이 어느 정도 있어야함

하이퍼파라미터는 개발자 취향임
너무 성능이 안나오면 의심해보고 변경해봐야할 부분

LR
기본값 Lr = 0.01 이미지넷 기준
경험치가 중요

배치사이즈 
lr과 마찬가지로 답은없다. 다만 컴퓨팅 스펙에 따라 가용범위가 다름
미니배치 - Aug에서 이미지형태를 변환시키는 경우 메모리 여유공간이 필요
ex) Scale을 걸면 +-50% 변화
크면 클수록 빠르게 학습된다.
실무에서 32, 36정도를 사용

Yolo5는 논문이 없음
4가 있고
5, 7비교하면 7이 더 좋음
겹쳐있는 사람을 잘 못잡음
그래서 two station을 사용함 성능 확실, 무거움

epoch
디텍션기준 기본 100정도?
분류 기준으로 50이하
구글에서 iteration을 많이 사용(two station)

활성함수
굳이 이진분류를 안함 멀티를 사용(특정상황 True,False를 확실히 구분할때)
우리가 고려할 부분은 아님 모델을 사용하기만 하면 되니까
연구목적이라면 공부하고 학위받고 해야함(주로 데이터&모델 압축이 연구 주제)

모델

이미지 = Image net Zoo, MxNet
디텍션(DetectionZoo) = OpenMMLab(https://openmmlab.com/), Detectron2(양식에 맞는 데이터만 있으면 된다.)

성능지표
-디텍션
	IOU = 겹침이 발생했을때 사용(대회나 서비스에서 필요함) Yolo에서 그려줌, 대부분 사용
	AP = Ap(@ 0.5:0.95) 이 구간 사이의 점수를 봐야함
	
Fine tuning 은 연구할때많이 사용

model 어셈블은 대회에서만 사용함
부스팅은 모델 아키텍쳐를 완벽하게 파악하고 데이터의 판별결과를 알고이써야 부스팅을 통해 효과를 얻을수있ㅇ므

===================================

분류 대회의 경우
세그맨테이션을 사용해서 keypoint를 넣어주는 방법도 존재함

디텍션대회의 경우
데이터 검수가 필수 (Keypoint를 잡기위해 불필요한 객체들을 제거(block 등 방법))

 

